Quy ước nội dung JSON phiên bản V1:
// ngày 21/8/2023


  /*
             NẾU số lượng phần tử JSON có trong mảng nhỏ hơn (do bị thiếu) thì mặc định là sẽ không xử lý dữ liệu đó 
             */

            ver = new long[1];
            /*
            [0]: version của json hiện tại ( để phân biệt trước khi phân tích cú pháp bên trong json này )
            */
            id = new string[3];
            /*
            [0]: mã thiết bị 
            [1]: mã tệp path lộ trình cày 
            [2]: mã tệp path đỗ xe 
            */
            drive = new int[5];
            /*  
            [0]: INDEX CỦA TASK PLAN,
            [1]: LOẠI PATH ĐANG chạy, (đang chạy trên path cày hay path đỗ xe)
            [2]: trạng thái di chuyển, ( đã hủy - đang chạy - đang tạm dừng )
            [3]: điểm dang chạy trên path hiện tại
            [4]: điểm dang chạy trên path trước đó
            */
            time = new int[7];//thời gian đồng hồ GTM hiện tại của xe

            /* 
            [0]: ngày
            [1]: tháng
            [2]: năm 
            [3]: giờ 
            [4]: phút 
            [5]: millis giây (giây đơn vị ms) 
            [6]: múi giờ GTM
            */
            sum = new double[6];//
            /*
            [0]: tổng thời gian cần để đi hết quãng đường còn lại cho tới khi kết thúc công việc( giây)
            [1]: thời gian đã di chuyển tính từ lúc bắt đầu công việc (giây) ( tính từ lúc bắt đầu công việc - không phải từ lúc khởi động lại máy do chết máy)
            [2]: tổng quãng đường cần đi còn lại (mét)
            [3]: tổng quãng đường đã đi (mét) ( tính từ lúc bắt đầu công việc - không phải từ lúc khởi động lại máy do chết máy)
            [4]: tổng số lít dầu  cần để đi hết quãng đường còn lại cho tới khi kết thúc công việc( giây)
            [5]: số lít dầu đã sử dụng để đi của quãng đường ( tính từ lúc bắt đầu công việc - không phải từ lúc khởi động lại máy do chết máy)
            */

            llh = new double[3];
            //tọa độ hiện tại của xe trong hệ tọa độ LAT/LONG
            /*
            [0]: lat(degree)
            [1]: long(degree) 
            [2]: height(m)
            */

            xyz = new double[3];
            // tọa độ hiện tại của xe trong hệ tọa độ MÉT
            /*
            [0]:  x_meter(m) 
            [1]:  y_meter(m) 
            [2]:  z_meter (m)
            */
            ypr = new double[3];
            //3 góc trạng thái của xe
            /*
            [0]:  yaw (degree)
            [1]:  pitch(degree)
            [2]:  roll(degree)
            */

            rtk = new int[5];
            /*
            [0]: trạng thái RTK hiện tại
            [1]:  tổng số lượng vệ tinh đang lock
            */
            sen = new double[13]; // các giá trị cảm biến khác

            /*
            [0]: dung lượng pin, (%) [0,100] ( đọc từ cảm biến)
            [1]: dung lượng xăng,(%) [0,100] ( đọc từ cảm biến)
            [2]: tốc độ bánh xe trước - trái
            [3]: tốc độ bánh xe trước - phải
            [4]: tốc độ bánh xe sau - trái
            [5]: tốc độ bánh xe sau - phải
            [6]: nhiệt độ gần bình nhiên liệu
            [7]: nhiệt độ bên trong cabin xe
            [8]: nhiệt độ bên ngoài môi trường
            [9]: áp xuất không khí bên trong xe
            [10]: độ ẩm không khí bên trong xe
            [11]: độ ẩm không khí bên ngoài xe
            [12]: tốc độ gió môi trường

            */

            ctr_fed = new double[9*2];
            /*
            [0]: giá trị điều khiển góc đánh lái mong muốn (là giá trị điều khiển, không phải giá trị đọc của cảm biến)
            [1]: giá trị góc đánh lái đọc từ cảm biến
            [2]: tốc độ RPM động cơ mong muốn điều khiển (rpm) (là giá trị điều khiển, không phải giá trị đọc của cảm biến)
            [3]: giá trị  RPM động cơ đọc từ cảm biến
            [4]: giá trị điều khiển côn mong muốn(là giá trị điều khiển, không phải giá trị đọc của cảm biến)
            [5]: giá trị côn đọc từ cảm biến vị trí côn
            [6]: giá trị điều khiển cần số phụ mong muốn (là giá trị điều khiển, không phải giá trị đọc của cảm biến)
            [7]: giá trị cần số phụ đọc từ cảm biến
            [8]: giá trị điều khiển cần số chính mong muốn(là giá trị điều khiển, không phải giá trị đọc của cảm biến)
            [9]: giá trị cần số chính đọc từ cảm biến
            [10]: giá trị điều khiển độ cao nâng càng mong muốn(là giá trị điều khiển, không phải giá trị đọc của cảm biến)
            [11]: giá trị độ cao nâng càng đọc từ cảm biến
            [12]: giá trị điều khiển độ nghiêng của dàn xới mong muốn(là giá trị điều khiển, không phải giá trị đọc của cảm biến)
            [13]: giá trị độ nghiêng của dàn xới  đọc từ cảm biến
            [14]: giá trị điều khiển tốc độ di chuyển cao nhất (là giá trị điều khiển, không phải giá trị đọc của cảm biến)
            [15]: giá trị  tốc độ di chuyển đo bởi GPS 
            [16]: bán kính rẽ xe mong muốn điều khiển (m) (là giá trị bán kính rẽ mà xe mong muốn đạt được)
            [17]: bán kính rẽ xe ước tính  (m) ( được ước tính từ dữ liệu quỹ đạo di chuyển và trạng thái xe để ước tính bán kính rẽ trong thế giới thực)
            */


            ctr_oly = new int[8];

            /*
            [0]: giá trị điều khiển nguồn mong muốn hiện tại (là giá trị điều khiển, không phải giá trị đọc của cảm biến)
            [1]: giá trị điều khiển đề hiện tại (là giá trị điều khiển, không phải giá trị đọc của cảm biến)
            [2]: giá trị trạng thái chuyển mạch nguồn  hiện tại(là giá trị điều khiển, không phải giá trị đọc của cảm biến)
            [3]: giá trị trạng thái bật tắt đèn pha trước  hiện tại(là giá trị điều khiển, không phải giá trị đọc của cảm biến)
            [4]: giá trị trạng thái bật tắt đèn pha sau  hiện tại(là giá trị điều khiển, không phải giá trị đọc của cảm biến)
            [5]: giá trị trạng thái góc xoay servo1 hiện tại(là giá trị điều khiển, không phải giá trị đọc của cảm biến)
            [6]: giá trị trạng thái góc xoay servo2 hiện tại(là giá trị điều khiển, không phải giá trị đọc của cảm biến)
            [7]: giá trị trạng thái góc xoay servo3 hiện tại(là giá trị điều khiển, không phải giá trị đọc của cảm biến)
            */



            plans = new double[25*2];// vị trí SẼ di chuyển TỚI tiếp theo 
                                     //chú ý : kích thước của mảng là bội số của 2 ( có thể =0)
            /*
              Mảng gồm 2 phần tử Lat/Long  sắp xếp liên tiếp

            [0]: Lat1, [1]:Long1,
            [2]:Lat2, [3]: Long2,
            [4]:Lat3,  [5]:Long3,
            [6]: Lat4 , [7]: Long4 .....
            [i]: Lat_i , [i+1]: Long_i .....


            */



            err = new long[10];
            //List danh sách mã lỗi đang xuất hiện và vẫn chưa được xử lý.
            /*
             
             [0]:
             [1]:
             [2]:
              ...
             [i]
             */

            /*

            Ví dụ 1 :
            {
              "ver":"2",
               "id":["34d45345","gt435345","235643gret"],

              "drive":[36,2,0,65,26],
             "time":[17,12,2023,12,45,979,7],
            "sum":[ 12323,5543,34545.67, 344.234, 10.5, 4.5],

            "llh":[-20.23213123, 123.12312323, 122.33],
            "xyz":[123123.123123, 15469452.342 , 122.33],
            "ypr":[123.2,-12.34, 123.22],
            "rtk":[234,23,23,2],

            
            "sen":[23,34,0,0,0,0 ,0,0,0 ,0,0,0,0],
            
            "ctr_fed" =[
                12 ,23,
                1020,1001,
                1 , 1.0,
                2, 2.0,
                -1, -1.0,
                1.21, 1.19,
                35, 35.01,
                5.6, 5.4,

                4.5, 4.4

          ],
            "ctr_oly":[
                1,0,0,0,1,90,90,90
 
               ],

            "plans":[
               20.23424, 106.123233
               20.92342423, 106.2123233,
               20.234224, 106.1232633,
               20.234264, 106.8123233,
               20.234524, 106.1232233,
               20.24346724, 106.123233,
               20.23424, 106.1238233,
               20.9232424, 106.1223233,
               20.235424, 106.1232363,
               20.23424, 106.123233,
               20.232424, 106.123233,
               20.423424, 106.1232233,
               20.23424, 106.1232833,
               20.23424, 106.1232233,
               20.234724, 106.1823233,

 
               ],
             "err":[0,1,123,213  ]


            }
            */


            //   Ví dụ 2 :
            /* Ví dụ cho Ver 1 rút gọn :
  NẾU số lượng phần tử JSON có trong mảng nhỏ hơn(do bị thiếu) thì mặc định là sẽ không xử lý dữ liệu đó:


             */

            /*

            {
              "ver":"2",
               "id":["34d45345","gt435345","235643gret"],

              "drive":[36,2,0,65,26],
             "time":[17,12,2023,12,45,979,7],
            "sum":[ 12323,5543,34545.67, 344.234, 10.5, 4.5],

            "llh":[-20.23213123, 123.12312323, 122.33],
            "xyz":[123123.123123, 15469452.342 , 122.33],
            "ypr":[123.2,-12.34, 123.22],
            "rtk":[234,23,23,2],

            
            "sen":[23,34,0,0,0,0 ,0,0,0 ,0,0,0,0],
            
            "ctr_fed" =[
                12 ,23,
                1020,1001,
                1 , 1.0,
                2, 2.0,
                -1, -1.0,
                1.21, 1.19,
                35, 35.01,
                5.6, 5.4,

                4.5, 4.4

          ],
            "ctr_oly":[
                1,0,0,0,1,90,90,90
 
               ],

            "plans":[
               20.23424, 106.123233
               20.92342423, 106.2123233,
               20.234224, 106.1232633,
               20.234264, 106.8123233,
               20.234524, 106.1232233,
               20.24346724, 106.123233,
               20.23424, 106.1238233,
               20.9232424, 106.1223233,
               20.235424, 106.1232363,
               20.23424, 106.123233,
               20.232424, 106.123233,
               20.423424, 106.1232233,
               20.23424, 106.1232833,
               20.23424, 106.1232233,
               20.234724, 106.1823233,

 
               ],
             "err":[ 0,1,123,213,122 , 475,45747,]


            }
            */
